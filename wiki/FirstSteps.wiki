#summary First steps using phloc-css
#labels Featured

= Introduction =

phloc-css is a Java library for reading and writing CSS 2 and CSS 3 data structures. It has no logic for applying CSS onto HTML elements.
This page shows some basic code examples that can be used to use the library. All snippets are free for any use.

Prerequisites: as *phloc-css depends* on [http://code.google.com/p/phloc-commons phloc-commons], the following examples also do. Additionally [http://www.slf4j.org/ SLF4J] is required.

= Usage with Maven =

To build phloc-css from source, Maven 3.0.4 is required. Any version below does *NOT* work!

To use phloc-css put the following to your pom.xml:
{{{
...
  <repositories>
...
    <repository>
      <id>phloc.com</id>
      <url>http://repo.phloc.com/maven2</url>
      <releases>
        <enabled>true</enabled>
      </releases>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
    </repository>
  </repositories>
...
  <dependencies>
    ...
    <dependency>
      <groupId>com.phloc</groupId>
      <artifactId>phloc-css</artifactId>
      <version>3.3.0</version>
    </dependency>
  </dependencies>
...
}}}

= Reading a CSS 3.0 file =

{{{
import java.io.File;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import com.phloc.css.ECSSVersion;
import com.phloc.css.decl.CascadingStyleSheet;
import com.phloc.css.reader.CSSReader;

/**
 * This is example code to read a CSS declaration from a {@link File}.
 * 
 * @author philip
 */
public final class WikiReadCSS
{
  private static final Logger s_aLogger = LoggerFactory.getLogger (WikiReadCSS.class);

  /**
   * Read a CSS 3.0 declaration from a file using UTF-8 encoding.
   * 
   * @param aFile
   *        The file to be read. May not be <code>null</code>.
   * @return <code>null</code> if the file has syntax errors.
   */
  public static CascadingStyleSheet readCSS30 (final File aFile)
  {
    final CascadingStyleSheet aCSS = CSSReader.readFromFile (aFile, "utf-8", ECSSVersion.CSS30);
    if (aCSS == null)
    {
      // Most probably a syntax error
      s_aLogger.warn ("Failed to read CSS - please see previous logging entries!");
      return null;
    }
    return aCSS;
  }
}
}}}

= Writing a CSS 3.0 file =

{{{
import java.io.File;
import java.io.IOException;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import com.phloc.commons.io.file.SimpleFileIO;
import com.phloc.commons.state.ESuccess;
import com.phloc.css.ECSSVersion;
import com.phloc.css.decl.CascadingStyleSheet;
import com.phloc.css.writer.CSSWriter;
import com.phloc.css.writer.CSSWriterSettings;

/**
 * This is example code to write a CSS declaration to a {@link File}.
 * 
 * @author philip
 */
public final class WikiWriteCSS
{
  private static final Logger s_aLogger = LoggerFactory.getLogger (WikiWriteCSS.class);

  /**
   * Write a CSS 3.0 declaration to a file using UTF-8 encoding.
   * 
   * @param aCSS
   *        The CSS to be written to a file
   * @param aFile
   *        The file to be written. May not be <code>null</code>.
   * @return {@link ESuccess#SUCCESS} if everything went okay, and
   *         {@link ESuccess#FAILURE} if an error occurred
   */
  public ESuccess writeCSS30 (final CascadingStyleSheet aCSS, final File aFile)
  {
    // 1.param: version to write
    // 2.param: false== non-optimized output
    final CSSWriterSettings aSettings = new CSSWriterSettings (ECSSVersion.CSS30, false);
    try
    {
      final CSSWriter aWriter = new CSSWriter (aSettings);
      // Write the @charset rule: (optional)
      aWriter.setContentCharset ("utf-8");
      // Write a nice file header
      aWriter.setHeaderText ("This file was generated by phloc-css\nGrab a copy at http://code.google.com/p/phloc-css");
      // Convert the CSS to a String
      final String sCSSCode = aWriter.getCSSAsString (aCSS);
      // Finally write the String to a file
      return SimpleFileIO.writeFile (aFile, sCSSCode, "utf-8");
    }
    catch (final IOException ex)
    {
      s_aLogger.error ("Failed to write the CSS to a file", ex);
      return ESuccess.FAILURE;
    }
  }
}
}}}